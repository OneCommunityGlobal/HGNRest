const mongoose = require('mongoose');

const { Schema } = mongoose;

/**
 * This model intends to store notifications for users. This will be fetched and displayed
 *  when the user is on dashboard page. Currently, the notifications are not sent to the user
 *  in real time. The user has to visit the dashboard to fetch the notifications.
 * 
 * There are two types of notifications:
 * 1. System generated notifications
 *    - Notifications generated by the system or shceduled tasks (Note: system generated
 *      notifications will find a owner user and set it as the sender of the notification)
 * 2. User generated notifications
 *    - Notifications generated by users (admin and owner)
 * */

const notificationSchema = new Schema({

  message: { type: String, required: true },
  sender: { type: Schema.Types.ObjectId, ref: 'userProfile', required: true },
  recipient: { type: Schema.Types.ObjectId, ref: 'userProfile', required: true },
  isSystenGenerated: { type: Boolean, default: false },
  isRead: { type: Boolean, default: false },
  createdTimeStamps: { type: Date, default: Date.now },

}, { optimisticConcurrency: true }); // Enable optimistic concurrency control

// Populate sender and recipient info
notificationSchema.virtual('senderInfo', {
  ref: 'userProfile',
  localField: 'sender',
  foreignField: '_id',
  justOne: true,
  options: { select: 'firstName lastName email' },
});

notificationSchema.virtual('recipientInfo', {
  ref: 'userProfile',
  localField: 'recipient',
  foreignField: '_id',
  justOne: true,
  options: { select: 'firstName lastName email' },
});


notificationSchema.index({ recipient: 1, createdTimeStamps: 1, isRead: 1 });
notificationSchema.index({ sender: 1, createdTimeStamps: 1 });

module.exports = mongoose.model('notification', notificationSchema, 'notifications');
